<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.geomesa.nifi</groupId>
    <artifactId>geomesa-nifi_2.12</artifactId>
    <version>4.1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>GeoMesa-NiFi</name>
    <description>NiFi Processors for ingesting and converting geo data using GeoMesa and GeoTools</description>
    <url>https://github.com/geomesa/geomesa-nifi</url>
    <inceptionYear>2015</inceptionYear>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Anthony Fox</name>
            <email>anthony@ccri.com</email>
            <organization>CCRi</organization>
            <organizationUrl>http://www.ccri.com</organizationUrl>
        </developer>
        <developer>
            <name>James Hughes</name>
            <email>jhughes@ccri.com</email>
            <organization>CCRi</organization>
            <organizationUrl>http://www.ccri.com</organizationUrl>
        </developer>
        <developer>
            <name>Emilio Lahr-Vivaz</name>
            <email>elahrvivaz@ccri.com</email>
            <organization>CCRi</organization>
            <organizationUrl>http://www.ccri.com</organizationUrl>
        </developer>
        <developer>
            <name>Andrew Hulbert</name>
            <email>ahulbert@ccri.com</email>
            <organization>CCRi</organization>
            <organizationUrl>http://www.ccri.com</organizationUrl>
        </developer>
        <developer>
            <name>Austin Heyne</name>
            <email>aheyne@ccri.com</email>
            <organization>CCRi</organization>
            <organizationUrl>http://www.ccri.com</organizationUrl>
        </developer>
    </developers>

    <modules>
        <module>geomesa-accumulo-bundle</module>
        <module>geomesa-datastore-bundle</module>
        <module>geomesa-fs-bundle</module>
        <module>geomesa-gt-bundle</module>
        <module>geomesa-hbase-bundle</module>
        <module>geomesa-kafka-bundle</module>
        <module>geomesa-lambda-bundle</module>
        <module>geomesa-redis-bundle</module>
    </modules>

    <properties>
        <geomesa.version>4.1.0-SNAPSHOT</geomesa.version>
        <nifi.version>1.23.2</nifi.version>

        <scala.version>2.12.17</scala.version>
        <scala.binary.version>2.12</scala.binary.version>

        <avro.version>1.11.3</avro.version>
        <guava.version>32.1.3-jre</guava.version>

        <!-- versions from geomesa -->
        <gt.version>28.2</gt.version>
        <accumulo.version>2.0.1</accumulo.version>
        <thrift.version>0.12.0</thrift.version>
        <zookeeper.version>3.7.2</zookeeper.version>
        <hadoop.version>3.3.6</hadoop.version>
        <hbase.version>2.5.6-hadoop3</hbase.version>
        <hbase-1.version>1.4.14</hbase-1.version>
        <kafka.version>2.8.2</kafka.version>
        <zkclient.version>0.11</zkclient.version>
        <postgres.version>42.6.0</postgres.version>

        <curator.version>4.3.0</curator.version>
        <netty.version>4.1.100.Final</netty.version>
        <jetty.version>9.4.53.v20231009</jetty.version>
        <fasterxml.jackson.version>2.15.3</fasterxml.jackson.version>
        <fasterxml.woodstox.version>5.4.0</fasterxml.woodstox.version> <!-- managed from 5.3.0 -->
        <commons.net.version>3.10.0</commons.net.version> <!-- managed from 3.1 -->
        <commons.text.version>1.10.0</commons.text.version>
        <wildfly.openssl.version>1.1.3.Final</wildfly.openssl.version> <!-- managed from 1.0.7.Final -->
        <gson.version>2.10.1</gson.version>
        <snappy-java.version>1.1.10.5</snappy-java.version> <!-- managed from 1.1.1.6 -->
        <protobuf-java.version>3.24.4</protobuf-java.version>
        <protobuf-java.hbase.version>2.6.1</protobuf-java.hbase.version> <!-- needs to be 2.x for hbase1 -->
        <json-path.version>2.8.0</json-path.version> <!-- managed from 2.7.0 -->
        <nimbus-jose-jwt.version>9.37</nimbus-jose-jwt.version> <!-- managed from 9.8.1 -->
        <commons-configuration.version>1.10</commons-configuration.version> <!-- managed from 1.6 -->
        <commons-configuration2.version>2.9.0</commons-configuration2.version> <!-- managed from 2.5.0 -->
        <commons-beanutils.version>1.9.4</commons-beanutils.version> <!-- managed from 1.9.3 -->
        <httpclient.version>4.5.14</httpclient.version>
        <parquet.version>1.13.1</parquet.version>

        <!-- aws version -->
        <aws.java.sdk.version>1.12.572</aws.java.sdk.version>

        <slf4j.version>1.7.36</slf4j.version>
        <scalalogging.version>3.9.5</scalalogging.version>
        <reload4j.version>1.2.25</reload4j.version>

        <specs2.version>4.20.2</specs2.version>
        <junit.version>4.13.2</junit.version>
        <testcontainers.version>1.19.1</testcontainers.version>

        <test.redis.docker.tag>7-alpine</test.redis.docker.tag>
        <test.postgres.docker.tag>15.1</test.postgres.docker.tag>
        <test.postgis.docker.tag>15-3.3</test.postgis.docker.tag>
        <test.confluent.docker.tag>7.3.1</test.confluent.docker.tag> <!-- confluent 7.3.x corresponds to kafka 3.3.x -->

        <maven.test.jvmargs>-Xms512m -Xmx4g -XX:-UseGCOverheadLimit</maven.test.jvmargs>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Maven plugin versions, latest as of 2023-09-20 -->
        <build-helper-maven-plugin.version>3.4.0</build-helper-maven-plugin.version>
        <maven-enforcer-plugin.version>3.4.1</maven-enforcer-plugin.version>
        <maven-assembly-plugin.version>3.6.0</maven-assembly-plugin.version>
        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
        <scala-maven-plugin.version>3.4.6</scala-maven-plugin.version>
        <maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
        <maven-source-plugin.version>3.3.0</maven-source-plugin.version>
        <maven-shade-plugin.version>3.5.0</maven-shade-plugin.version>
        <maven-deploy-plugin.version>3.1.1</maven-deploy-plugin.version>
        <maven-release-plugin.version>3.0.1</maven-release-plugin.version>
        <nifi-nar-maven-plugin.version>1.5.1</nifi-nar-maven-plugin.version>
        <license-maven-plugin.version>4.2</license-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.3.0</maven-checkstyle-plugin.version>
    </properties>

    <scm>
        <connection>scm:git:git@github.com:geomesa/geomesa-nifi.git</connection>
        <developerConnection>scm:git:git@github.com:geomesa/geomesa-nifi.git</developerConnection>
        <url>https://github.com/geomesa/geomesa-nifi</url>
        <tag>HEAD</tag>
    </scm>

    <dependencyManagement>
        <dependencies>
            <!-- Nifi Dependencies -->
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-standard-services-api-nar</artifactId>
                <version>${nifi.version}</version>
                <type>nar</type>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-aws-service-api-nar</artifactId>
                <version>${nifi.version}</version>
                <type>nar</type>
            </dependency>
            <!-- record utils isn't in any of our inherited standard nifi nars -->
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-standard-record-utils</artifactId>
                <version>${nifi.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-api</artifactId>
                <version>${nifi.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-utils</artifactId>
                <version>${nifi.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-aws-service-api</artifactId>
                <version>${nifi.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-record</artifactId>
                <version>${nifi.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-avro-record-utils</artifactId>
                <version>${nifi.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-record-serialization-service-api</artifactId>
                <version>${nifi.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-record-sink-api</artifactId>
                <version>${nifi.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-schema-registry-service-api</artifactId>
                <version>${nifi.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-record-serialization-services</artifactId>
                <version>${nifi.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-standard-processors</artifactId>
                <version>${nifi.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- managed submodules -->

            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-datastore-services-api_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-datastore-services-api-nar_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
                <type>nar</type>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-datastore-processors_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-datastore-services-nar_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
                <type>nar</type>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-accumulo-processors_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-accumulo20-nar_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
                <type>nar</type>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-accumulo21-nar_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
                <type>nar</type>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-fs-processors_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-fs-nar_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
                <type>nar</type>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-gt-processors_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-gt-nar_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
                <type>nar</type>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-hadoop-processors_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-hbase-processors_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-hbase1-nar_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
                <type>nar</type>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-hbase2-nar_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
                <type>nar</type>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-kafka-processors_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-kafka-nar_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
                <type>nar</type>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-lambda-processors_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-lambda-nar_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
                <type>nar</type>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-redis-processors_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geomesa.nifi</groupId>
                <artifactId>geomesa-redis-nar_${scala.binary.version}</artifactId>
                <version>${project.version}</version>
                <type>nar</type>
            </dependency>

            <!-- geomesa -->
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-convert-all_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-index-api_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-utils_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-process-vector_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-tools_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-metrics-graphite_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-accumulo-datastore_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-fs-datastore_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-hbase-datastore_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-kafka-datastore_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-lambda-datastore_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-redis-datastore_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-gt-partitioning_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-fs-storage-api_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-fs-storage-parquet_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-fs-storage-orc_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-zk-utils_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
            </dependency>

            <dependency>
                <groupId>org.geotools</groupId>
                <artifactId>gt-main</artifactId>
                <version>${gt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.geotools</groupId>
                <artifactId>gt-render</artifactId>
                <version>${gt.version}</version>
            </dependency>
            <!--
                `org.eclipse.emf` is a transitive dependency of gt-xsd-wfs, however the version number is
                specified as `[2.15.0,3.0.0)`, which seems to intermittently trigger a maven bug.
                geotools 28 uses 2.15.0, so we peg to that version here.
            -->
            <dependency>
                <groupId>org.eclipse.emf</groupId>
                <artifactId>org.eclipse.emf.common</artifactId>
                <version>2.15.0</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.emf</groupId>
                <artifactId>org.eclipse.emf.ecore</artifactId>
                <version>2.15.0</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.emf</groupId>
                <artifactId>org.eclipse.emf.ecore.xmi</artifactId>
                <version>2.15.0</version>
            </dependency>

            <!-- data store dependencies -->
            <dependency>
                <groupId>org.apache.accumulo</groupId>
                <artifactId>accumulo-core</artifactId>
                <version>${accumulo.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.accumulo</groupId>
                <artifactId>accumulo-test</artifactId>
                <version>${accumulo.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.zookeeper</groupId>
                <artifactId>zookeeper</artifactId>
                <version>${zookeeper.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <version>${zkclient.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.hbase</groupId>
                <artifactId>hbase-client</artifactId>
                <version>${hbase.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.hadoop</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.google.protobuf</groupId>
                        <artifactId>protobuf-java</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.hbase</groupId>
                <artifactId>hbase-common</artifactId>
                <version>${hbase.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.google.protobuf</groupId>
                        <artifactId>protobuf-java</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.hbase</groupId>
                <artifactId>hbase-protocol</artifactId>
                <version>${hbase.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_${scala.binary.version}</artifactId>
                <version>${kafka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
            </dependency>

            <dependency>
                <groupId>org.geotools.jdbc</groupId>
                <artifactId>gt-jdbc-postgis</artifactId>
                <version>${gt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgres.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-common</artifactId>
                <version>${hadoop.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.google.protobuf</groupId>
                        <artifactId>protobuf-java</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-client</artifactId>
                <version>${hadoop.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.fasterxml.jackson.core</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.google.code.findbugs</groupId>
                        <artifactId>jsr305</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.google.code.gson</groupId>
                        <artifactId>gson</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.google.re2j</groupId>
                        <artifactId>re2j</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-codec</groupId>
                        <artifactId>commons-codec</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-io</groupId>
                        <artifactId>commons-io</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>hsqldb</groupId>
                        <artifactId>hsqldb</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>io.netty</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.inject</groupId>
                        <artifactId>javax.inject</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>log4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>net.minidev</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.avro</groupId>
                        <artifactId>avro</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.commons</groupId>
                        <artifactId>commons-compress</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.commons</groupId>
                        <artifactId>commons-lang3</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.curator</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.httpcomponents</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.zookeeper</groupId>
                        <artifactId>zookeeper</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.glassfish</groupId>
                        <artifactId>javax.servlet</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jetty</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jetty-util</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jsp-2.1</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.mortbay.jetty</groupId>
                        <artifactId>jsp-api-2.1</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-aws</artifactId>
                <version>${hadoop.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-auth</artifactId>
                <version>${hadoop.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk</artifactId>
                <version>${aws.java.sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-core</artifactId>
                <version>${aws.java.sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-s3</artifactId>
                <version>${aws.java.sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>com.amazonaws</groupId>
                <artifactId>aws-java-sdk-dynamodb</artifactId>
                <version>${aws.java.sdk.version}</version>
            </dependency>
            <dependency>
                <groupId>com.jayway.jsonpath</groupId>
                <artifactId>json-path</artifactId>
                <version>${json-path.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>

            <!-- manage various hadoop dependencies to more recent versions -->
            <dependency>
                <groupId>org.xerial.snappy</groupId>
                <artifactId>snappy-java</artifactId>
                <version>${snappy-java.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-csv</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-cbor</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jdk8</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-paranamer</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-scala_${scala.binary.version}</artifactId>
                <version>${fasterxml.jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.woodstox</groupId>
                <artifactId>woodstox-core</artifactId>
                <version>${fasterxml.woodstox.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-net</groupId>
                <artifactId>commons-net</artifactId>
                <version>${commons.net.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wildfly.openssl</groupId>
                <artifactId>wildfly-openssl</artifactId>
                <version>${wildfly.openssl.version}</version>
            </dependency>
            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>${nimbus-jose-jwt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-client</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.curator</groupId>
                <artifactId>curator-recipes</artifactId>
                <version>${curator.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${commons.text.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${avro.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-configuration2</artifactId>
                <version>${commons-configuration2.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${protobuf-java.version}</version>
            </dependency>

            <!-- Netty 4.x used by arrow, hadoop, hbase, and c* -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-buffer</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-codec-http</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-common</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-handler</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-classes-epoll</artifactId>
                <version>${netty.version}</version>
            </dependency>
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-transport-native-epoll</artifactId>
                <version>${netty.version}</version>
            </dependency>

            <!-- specific to hadoop not to be confused with above-->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty</artifactId>
                <version>3.6.2.Final</version>
            </dependency>

            <!-- Jetty used by hadoop/hbase2.x -->
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-client</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-http</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-io</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-util</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-servlet</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-security</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-util-ajax</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-webapp</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-xml</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty.websocket</groupId>
                <artifactId>websocket-client</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty.websocket</groupId>
                <artifactId>websocket-common</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty.websocket</groupId>
                <artifactId>websocket-api</artifactId>
                <version>${jetty.version}</version>
            </dependency>

            <!-- manage some hadoop dependencies -->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>${commons-configuration.version}</version>
                <exclusions>
                    <exclusion>
                        <!-- exclude commons-beanutils-core, which doesn't exist in 1.9.3 -->
                        <groupId>commons-beanutils</groupId>
                        <artifactId>commons-beanutils-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- GeoMesa converter dependencies -->
            <dependency>
                <groupId>org.apache.parquet</groupId>
                <artifactId>parquet-column</artifactId>
                <version>${parquet.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.parquet</groupId>
                <artifactId>parquet-hadoop</artifactId>
                <version>${parquet.version}</version>
            </dependency>

            <!-- scala -->
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-compiler</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>jline</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-reflect</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>com.typesafe.scala-logging</groupId>
                <artifactId>scala-logging_${scala.binary.version}</artifactId>
                <version>${scalalogging.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- test dependencies -->
            <dependency>
                <groupId>org.specs2</groupId>
                <artifactId>specs2-core_${scala.binary.version}</artifactId>
                <version>${specs2.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.specs2</groupId>
                <artifactId>specs2-junit_${scala.binary.version}</artifactId>
                <version>${specs2.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.specs2</groupId>
                <artifactId>specs2-mock_${scala.binary.version}</artifactId>
                <version>${specs2.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-reload4j</artifactId>
                <version>${slf4j.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>ch.qos.reload4j</groupId>
                <artifactId>reload4j</artifactId>
                <version>${reload4j.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.nifi</groupId>
                <artifactId>nifi-mock</artifactId>
                <version>${nifi.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>4.11.0</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-kafka-datastore_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
                <classifier>tests</classifier>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.locationtech.geomesa</groupId>
                <artifactId>geomesa-accumulo-datastore_${scala.binary.version}</artifactId>
                <version>${geomesa.version}</version>
                <classifier>tests</classifier>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>testcontainers</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>postgresql</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testcontainers</groupId>
                <artifactId>kafka</artifactId>
                <version>${testcontainers.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-reload4j</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.reload4j</groupId>
            <artifactId>reload4j</artifactId>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven-assembly-plugin.version}</version>
                    <configuration>
                        <tarLongFileMode>posix</tarLongFileMode>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <!-- Turn off 'useIncrementalCompilation' to keep this plugin
                             from recompiling Java files that the scala-maven-plugin
                             already compiled.  The scala-maven-plugin generates .class
                             files from Java sources when its 'incremental' option is
                             turned on (as it is in the 'zinc' profile).  In this case,
                             maven-compiler-plugin 3.0 to current (3.8.0) erroneously
                             detects changes and re-compiles the Java files unless this
                             option is turned off.  -->
                        <useIncrementalCompilation>false</useIncrementalCompilation>
                        <source>1.8</source>
                        <target>1.8</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>${scala-maven-plugin.version}</version>
                    <configuration>
                        <dependencies>
                            <dependency>
                                <groupId>org.scala-lang</groupId>
                                <artifactId>scala-reflect</artifactId>
                                <version>${scala.version}</version>
                            </dependency>
                        </dependencies>
                        <jvmArgs>
                            <jvmArg>-Xms1024m</jvmArg>
                            <jvmArg>-Xmx8G</jvmArg>
                            <jvmArg>-Duser.timezone=UTC</jvmArg>
                            <jvmArg>-Djava.awt.headless=true</jvmArg>
                        </jvmArgs>
                        <args>
                            <arg>-nowarn</arg>
                            <arg>-unchecked</arg>
                            <arg>-deprecation</arg>
                        </args>
                        <source>1.8</source>
                        <target>1.8</target>
                        <scalaVersion>${scala.version}</scalaVersion>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.surefire</groupId>
                            <artifactId>surefire-junit4</artifactId>
                            <version>${maven-surefire-plugin.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <includes>
                            <include>**/*Test.java</include>
                        </includes>
                        <argLine>${maven.test.jvmargs}</argLine>
                        <systemPropertyVariables>
                            <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
                            <java.awt.headless>true</java.awt.headless>
                            <user.timezone>UTC</user.timezone>
                            <user.language>en</user.language>
                            <user.region>US</user.region>
                            <geomesa.scan.ranges.target>500</geomesa.scan.ranges.target>
                            <geomesa.accumulo.test.tablet.servers>1</geomesa.accumulo.test.tablet.servers>
                            <geomesa.hbase.test.region.servers>1</geomesa.hbase.test.region.servers>
                            <postgis.docker.tag>${test.postgis.docker.tag}</postgis.docker.tag>
                            <postgres.docker.tag>${test.postgres.docker.tag}</postgres.docker.tag>
                            <redis.docker.tag>${test.redis.docker.tag}</redis.docker.tag>
                            <confluent.docker.tag>${test.confluent.docker.tag}</confluent.docker.tag>
                        </systemPropertyVariables>
                        <!-- these can interfere with the mini clusters we spin up for unit tests -->
                        <excludedEnvironmentVariables>HADOOP_HOME,ZOOKEEPER_HOME,ACCUMULO_HOME,HBASE_HOME</excludedEnvironmentVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven-jar-plugin.version}</version>
                    <configuration>
                        <archive>
                            <!-- automatic module config for java 9+ compatibility -->
                            <manifestEntries>
                                <Project-Version>${project.version}</Project-Version>
                                <Automatic-Module-Name>${module.name}</Automatic-Module-Name>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven-deploy-plugin.version}</version>
                    <configuration>
                        <!-- deployAtEnd doesn't work with the nar extension -->
                        <deployAtEnd>false</deployAtEnd>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven-source-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven-release-plugin.version}</version>
                    <configuration>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <tagNameFormat>geomesa-nifi-@{project.version}</tagNameFormat>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.nifi</groupId>
                    <artifactId>nifi-nar-maven-plugin</artifactId>
                    <version>${nifi-nar-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${license-maven-plugin.version}</version>
                    <configuration>
                        <header>build/copyright/ccri.txt</header>
                        <validHeaders>
                            <validHeader>build/copyright/ccri.txt</validHeader>
                        </validHeaders>
                        <properties>
                            <year>2022</year>
                            <owner>Commonwealth Computer Research, Inc.</owner>
                        </properties>
                        <headerDefinitions>
                            <definitions>build/copyright/geomesa-header.xml</definitions>
                        </headerDefinitions>
                        <mapping>
                            <java>GEOMESA_JAVA</java>
                            <scala>GEOMESA_JAVA</scala>
                        </mapping>
                        <includes>
                            <include>src/main/java/**</include>
                            <include>src/main/scala/**</include>
                            <include>src/test/java/**</include>
                            <include>src/test/scala/**</include>
                        </includes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven-checkstyle-plugin.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.slf4j</groupId>
                            <artifactId>slf4j-jdk14</artifactId>
                            <version>${slf4j.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.slf4j</groupId>
                            <artifactId>jcl-over-slf4j</artifactId>
                            <version>${slf4j.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven-enforcer-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${build-helper-maven-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                            <goal>test-jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <executions>
                    <execution>
                        <id>verify-services-newlines</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <failsOnError>true</failsOnError>
                            <checkstyleRules>
                                <module name="Checker">
                                    <module name="NewlineAtEndOfFile" />
                                </module>
                            </checkstyleRules>
                            <excludes>**/*</excludes>
                            <resourceIncludes>META-INF/services/*</resourceIncludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <bannedDependencies>
                                    <excludes combine.children="append">
                                        <exclude>*:*_2.10</exclude>
                                        <exclude>*:*_2.11</exclude>
                                        <exclude>*:*_2.13</exclude>
                                        <exclude>*:*_3</exclude>
                                        <exclude>log4j:*</exclude>
                                        <exclude>org.slf4j:slf4j-log4j12</exclude>
                                    </excludes>
                                </bannedDependencies>
                                <requireProperty>
                                    <message>property scala.version must be set</message>
                                    <property>scala.version</property>
                                    <regexMessage>property scala.version doesn't match expected compiler version</regexMessage>
                                    <regex>2.12.*</regex>
                                </requireProperty>
                                <requireProperty>
                                    <message>property scala.binary.version must be set</message>
                                    <property>scala.binary.version</property>
                                    <regexMessage>property scala.binary.version doesn't match compiler version</regexMessage>
                                    <regex>2.12</regex>
                                </requireProperty>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <!-- set up the module name based on the group and artifact id. the end result will (sort of)
                         map to the top-level package, which is considered best practice. our packages are not
                         consistent enough to make that completely true, but it would be disruptive to change them all -->
                    <execution>
                        <id>set-module-name-step-1</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>module.name</name>
                            <value>${project.artifactId}</value>
                            <!-- this assumes the artifact naming convention of `geomesa-foo-processors` -->
                            <!-- replace the trailing _{scala_version} -->
                            <regex>geomesa-([a-z][a-z0-9-]+)(_[0-9.]+)?</regex>
                            <replacement>org.geomesa.nifi.$1</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                    <execution>
                        <id>set-module-name-step-2</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <configuration>
                            <name>module.name</name>
                            <value>${module.name}</value>
                            <!-- module names are not allowed to have dashes -->
                            <regex>-</regex>
                            <replacement>.</replacement>
                            <failIfNoMatch>false</failIfNoMatch>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>zinc</id>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>net.alchim31.maven</groupId>
                            <artifactId>scala-maven-plugin</artifactId>
                            <configuration>
                                <recompileMode>incremental</recompileMode>
                                <useZincServer>true</useZincServer>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>central</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>net.alchim31.maven</groupId>
                        <artifactId>scala-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadoc</id>
                                <goals>
                                    <goal>doc-jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <distributionManagement>
                <snapshotRepository>
                    <id>ossrh</id>
                    <url>https://oss.sonatype.org/content/repositories/snapshots</url>
                </snapshotRepository>
                <repository>
                    <id>ossrh</id>
                    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>
            </distributionManagement>
        </profile>
    </profiles>

    <repositories>
        <!-- include central so that it is searched before our alternate repos -->
        <repository>
            <id>central</id>
            <name>Maven Repository Switchboard</name>
            <layout>default</layout>
            <url>https://repo1.maven.org/maven2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>locationtech-releases</id>
            <url>https://repo.eclipse.org/content/groups/releases</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>locationtech-snapshots</id>
            <url>https://repo.eclipse.org/content/groups/snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <!-- geotools -->
        <repository>
            <id>osgeo</id>
            <url>https://repo.osgeo.org/repository/release</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>confluent</id>
            <url>https://packages.confluent.io/maven/</url>
        </repository>
    </repositories>

</project>
